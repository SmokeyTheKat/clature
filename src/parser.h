#ifndef __clature_parser_h__
#define __clature_parser_h__

#include "./lexer.h"
#include "./utils.h"
#include "./qalloc.h"
#include <ddcKeyboard.h>

struct tokenNode;

extern bool debug;

struct tokenNode* make_tokenNode(struct token* value);
struct tokenNode* make_tokenNode_children(struct tokenNode** children, int cc, int psymbol);
static void push(int v);
static void pop(int count);
static int top(void);
static int print_stack(struct token tkn);
static int shift(int v);
static int reduce(int v);
static int agoto(int v);
static void zip(struct tokenNode* node);
static int accept(int v);
struct tokenNode** parser_main(struct token* tokens, sizet tokenCount, sizet* _treeCount);
void print_tree(struct tokenNode* root, int depth);

struct tokenNode* make_tokenNode(struct token* value)
{
	struct tokenNode* output = qmake(struct tokenNode, 1);
	output->nodeCount = 0;
	output->nodes = qmake(struct tokenNode*, 20);
	output->value = value;
	return output;
}

struct tokenNode* make_tokenNode_nont(int sym, char* val)
{
	struct token* newt = qmake(struct token, 1);
	newt->symbol = sym;
	newt->value = make_constant_ddString(val);
	return make_tokenNode(newt);
}

struct tokenNode* make_tokenNode_children(struct tokenNode** children, int cc, int psymbol)
{
	struct tokenNode* nparent = make_tokenNode_nont(psymbol, " ");
	for (int i = 0; i < cc; i++) nparent->nodes[i] = children[i];
	nparent->nodeCount = cc;
	return nparent;
}


static struct token* stream;
static struct token* streamEnd;
static int sstack[100];
static struct tokenNode* tstack[100];
static int spos = -1;
static int tpos = -1;
static sizet treeCount;
static struct tokenNode** trees;
/*
grammar:
G_A -> G_S
G_S -> G_S G_EQ G_S
G_S -> G_ILASM
G_S -> G_OBU
G_S -> G_CBU
G_S -> G_KW_ELSE
G_S -> G_KW_BREAK
G_S -> G_KW_CONTINUE
G_S -> G_AT G_N G_I
G_S -> G_AT G_N G_OBT G_S G_CBT
G_S -> G_KW_MALLOC G_AT G_N G_OBT G_S G_CBT
G_S -> G_AT G_N G_OBS G_S G_CBS
G_FP -> G_S G_COMMA G_S
G_FP -> G_FP G_COMMA G_S
G_FP -> G_OBP G_FP G_CBP
G_S -> G_KW_SUB G_AT G_N G_I G_FP
G_S -> G_I G_FP
G_S -> G_AT G_N G_OBS G_S G_COLON G_S G_CBS
G_S -> G_KW_IF G_S
G_S -> G_KW_WHILE G_S
G_S -> G_KW_FOR G_FP
G_S -> G_KW_RETURN G_S
G_S -> G_KW_EXTERN G_I
G_S -> G_KW_GLOBAL G_S
G_S -> G_KW_FREE G_S
G_S -> G_OBP G_S G_CBP
G_S -> G_S G_SO G_S
G_S -> G_S G_PO G_S
G_P -> G_P G_PO G_P
G_P -> G_P G_EO G_P
G_E -> G_E G_EO G_E
G_E -> G_E G_QO G_E
G_Q -> G_Q G_QO G_Q
G_S -> G_QUEST G_I
G_S -> G_P
G_P -> G_E
G_E -> G_Q
G_Q -> G_V
G_V -> G_I
G_V -> G_N
*/


enum
{
G_EQ,G_ILASM,G_OBU,G_CBU,G_KW_ELSE,G_KW_BREAK,G_KW_CONTINUE,G_AT,G_N,G_I,G_OBT,G_CBT,G_KW_MALLOC,G_OBS,G_CBS,G_COMMA,G_OBP,G_CBP,G_DOT,G_KW_NAMESPACE,G_KW_FORMAT,G_KW_SUB,G_COLON,G_KW_IF,G_KW_WHILE,G_KW_FOR,G_KW_RETURN,G_KW_EXTERN,G_KW_GLOBAL,G_KW_FREE,G_SO,G_PO,G_EO,G_QO,G_QUEST,G_PP,G_MM,G_Z,G_A,G_S,G_FP,G_P,G_E,G_Q,G_V,G_SEMI=G_Z
};
const struct syntax grammar[50] = {
{G_A,1},{G_S,3},{G_S,1},{G_S,1},{G_S,1},{G_S,1},{G_S,1},{G_S,1},{G_S,3},{G_S,5},{G_S,6},{G_S,5},{G_FP,3},{G_FP,3},{G_FP,3},{G_S,3},{G_S,3},{G_S,2},{G_S,4},{G_S,2},{G_S,5},{G_S,7},{G_S,2},{G_S,4},{G_S,7},{G_S,2},{G_S,2},{G_S,2},{G_S,2},{G_S,2},{G_S,2},{G_S,2},{G_S,3},{G_S,3},{G_S,3},{G_P,3},{G_P,3},{G_E,3},{G_E,3},{G_Q,3},{G_S,2},{G_S,2},{G_S,2},{G_S,2},{G_S,1},{G_P,1},{G_E,1},{G_Q,1},{G_V,1},{G_V,1},};
struct action stb[102][45] = {
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,1},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{accept,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,2},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,2},{0,0},{0,0},{reduce,2},{reduce,2},{0,0},{reduce,2},{reduce,2},{0,0},{0,0},{0,0},{reduce,2},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,2},{reduce,2},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,2},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,3},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,3},{0,0},{0,0},{reduce,3},{reduce,3},{0,0},{reduce,3},{reduce,3},{0,0},{0,0},{0,0},{reduce,3},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,3},{reduce,3},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,3},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,4},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,4},{0,0},{0,0},{reduce,4},{reduce,4},{0,0},{reduce,4},{reduce,4},{0,0},{0,0},{0,0},{reduce,4},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,4},{reduce,4},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,4},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,5},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,5},{0,0},{0,0},{reduce,5},{reduce,5},{0,0},{reduce,5},{reduce,5},{0,0},{0,0},{0,0},{reduce,5},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,5},{reduce,5},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,5},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,6},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,6},{0,0},{0,0},{reduce,6},{reduce,6},{0,0},{reduce,6},{reduce,6},{0,0},{0,0},{0,0},{reduce,6},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,6},{reduce,6},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,6},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,7},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,7},{0,0},{0,0},{reduce,7},{reduce,7},{0,0},{reduce,7},{reduce,7},{0,0},{0,0},{0,0},{reduce,7},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,7},{reduce,7},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,7},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,32},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,33},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,48},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{reduce,48},{shift,9},{0,0},{reduce,48},{reduce,48},{shift,36},{reduce,48},{shift,34},{shift,11},{shift,12},{shift,13},{reduce,48},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{reduce,48},{reduce,48},{reduce,48},{reduce,48},{shift,22},{shift,37},{shift,38},{reduce,48},{0,0},{agoto,39},{agoto,35},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,40},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,41},{0,0},{shift,42},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,43},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,44},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,45},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,47},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,39},{agoto,46},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,48},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,49},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,50},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,51},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,52},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,53},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,44},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,44},{0,0},{0,0},{reduce,44},{reduce,44},{0,0},{reduce,44},{reduce,44},{0,0},{0,0},{0,0},{reduce,44},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,44},{shift,54},{shift,55},{0,0},{0,0},{0,0},{0,0},{reduce,44},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,45},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,45},{0,0},{0,0},{reduce,45},{reduce,45},{0,0},{reduce,45},{reduce,45},{0,0},{0,0},{0,0},{reduce,45},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,45},{reduce,45},{shift,56},{shift,57},{0,0},{0,0},{0,0},{reduce,45},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,46},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,46},{0,0},{0,0},{reduce,46},{reduce,46},{0,0},{reduce,46},{reduce,46},{0,0},{0,0},{0,0},{reduce,46},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,46},{reduce,46},{reduce,46},{shift,58},{0,0},{0,0},{0,0},{reduce,46},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,47},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,47},{0,0},{0,0},{reduce,47},{reduce,47},{0,0},{reduce,47},{reduce,47},{0,0},{0,0},{0,0},{reduce,47},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,47},{reduce,47},{reduce,47},{reduce,47},{0,0},{0,0},{0,0},{reduce,47},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,49},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,49},{0,0},{0,0},{reduce,49},{reduce,49},{0,0},{reduce,49},{reduce,49},{0,0},{0,0},{0,0},{reduce,49},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,49},{reduce,49},{reduce,49},{reduce,49},{0,0},{0,0},{0,0},{reduce,49},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,59},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,60},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,61},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,62},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,63},{shift,64},{0,0},{0,0},{shift,65},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,66},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,67},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,22},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,22},{0,0},{0,0},{reduce,22},{shift,68},{0,0},{reduce,22},{reduce,22},{0,0},{0,0},{0,0},{reduce,22},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,22},{reduce,22},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,22},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,47},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,69},{agoto,70},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{reduce,42},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,42},{0,0},{0,0},{reduce,42},{reduce,42},{0,0},{reduce,42},{reduce,42},{0,0},{0,0},{0,0},{reduce,42},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,42},{reduce,42},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,42},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,43},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,43},{0,0},{0,0},{reduce,43},{reduce,43},{0,0},{reduce,43},{reduce,43},{0,0},{0,0},{0,0},{reduce,43},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,43},{reduce,43},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,43},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,71},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,17},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,17},{0,0},{0,0},{reduce,17},{reduce,17},{0,0},{reduce,17},{reduce,17},{0,0},{0,0},{0,0},{reduce,17},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,17},{reduce,17},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,17},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,72},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,19},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,19},{0,0},{0,0},{reduce,19},{reduce,19},{0,0},{reduce,19},{reduce,19},{0,0},{0,0},{0,0},{reduce,19},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,19},{reduce,19},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,19},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,73},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,25},{0,0},{0,0},{reduce,25},{reduce,25},{0,0},{reduce,25},{shift,29},{0,0},{0,0},{0,0},{reduce,25},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,25},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,26},{0,0},{0,0},{reduce,26},{reduce,26},{0,0},{reduce,26},{shift,29},{0,0},{0,0},{0,0},{reduce,26},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,26},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,27},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,27},{0,0},{0,0},{reduce,27},{shift,68},{0,0},{reduce,27},{reduce,27},{0,0},{0,0},{0,0},{reduce,27},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,27},{reduce,27},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,27},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,47},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,74},{agoto,70},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,28},{0,0},{0,0},{reduce,28},{reduce,28},{0,0},{reduce,28},{shift,29},{0,0},{0,0},{0,0},{reduce,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,29},{0,0},{0,0},{reduce,29},{reduce,29},{0,0},{reduce,29},{reduce,29},{0,0},{0,0},{0,0},{reduce,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,29},{reduce,29},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,30},{0,0},{0,0},{reduce,30},{reduce,30},{0,0},{reduce,30},{shift,29},{0,0},{0,0},{0,0},{reduce,30},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,30},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,31},{0,0},{0,0},{reduce,31},{reduce,31},{0,0},{reduce,31},{shift,29},{0,0},{0,0},{0,0},{reduce,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,75},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,40},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,40},{0,0},{0,0},{reduce,40},{reduce,40},{0,0},{reduce,40},{reduce,40},{0,0},{0,0},{0,0},{reduce,40},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,40},{reduce,40},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,40},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,27},{shift,77},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{agoto,76},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,27},{shift,77},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{agoto,78},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,27},{shift,77},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{agoto,79},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,27},{shift,77},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{agoto,80},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,27},{shift,77},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{agoto,81},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,1},{0,0},{0,0},{reduce,1},{reduce,1},{0,0},{reduce,1},{shift,29},{0,0},{0,0},{0,0},{reduce,1},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,1},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,16},{0,0},{0,0},{reduce,16},{reduce,16},{0,0},{reduce,16},{reduce,16},{0,0},{0,0},{0,0},{reduce,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,16},{reduce,16},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,16},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,33},{0,0},{0,0},{reduce,33},{reduce,33},{0,0},{reduce,33},{shift,29},{0,0},{0,0},{0,0},{reduce,33},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,33},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,34},{0,0},{0,0},{reduce,34},{reduce,34},{0,0},{reduce,34},{shift,29},{0,0},{0,0},{0,0},{reduce,34},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,34},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,8},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,8},{0,0},{0,0},{reduce,8},{reduce,8},{0,0},{reduce,8},{reduce,8},{0,0},{0,0},{0,0},{reduce,8},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,8},{reduce,8},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,8},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,82},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,83},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,84},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,15},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,15},{0,0},{0,0},{reduce,15},{reduce,15},{0,0},{reduce,15},{reduce,15},{0,0},{0,0},{0,0},{reduce,15},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,15},{reduce,15},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,15},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,85},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,71},{0,0},{shift,86},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,68},{0,0},{shift,87},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,88},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,89},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,90},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,71},{0,0},{shift,75},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,32},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,32},{0,0},{0,0},{reduce,32},{reduce,32},{0,0},{reduce,32},{reduce,32},{0,0},{0,0},{0,0},{reduce,32},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,32},{reduce,32},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,32},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,35},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,35},{0,0},{0,0},{reduce,35},{reduce,35},{0,0},{reduce,35},{reduce,35},{0,0},{0,0},{0,0},{reduce,35},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,35},{shift,54},{shift,55},{0,0},{0,0},{0,0},{0,0},{reduce,35},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,48},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,48},{0,0},{0,0},{reduce,48},{reduce,48},{0,0},{reduce,48},{reduce,48},{0,0},{0,0},{0,0},{reduce,48},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,48},{reduce,48},{reduce,48},{reduce,48},{0,0},{0,0},{0,0},{reduce,48},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,36},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,36},{0,0},{0,0},{reduce,36},{reduce,36},{0,0},{reduce,36},{reduce,36},{0,0},{0,0},{0,0},{reduce,36},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,36},{shift,54},{shift,55},{0,0},{0,0},{0,0},{0,0},{reduce,36},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,37},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,37},{0,0},{0,0},{reduce,37},{reduce,37},{0,0},{reduce,37},{reduce,37},{0,0},{0,0},{0,0},{reduce,37},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,37},{reduce,37},{shift,56},{shift,57},{0,0},{0,0},{0,0},{reduce,37},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,38},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,38},{0,0},{0,0},{reduce,38},{reduce,38},{0,0},{reduce,38},{reduce,38},{0,0},{0,0},{0,0},{reduce,38},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,38},{reduce,38},{shift,56},{shift,57},{0,0},{0,0},{0,0},{reduce,38},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,39},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,39},{0,0},{0,0},{reduce,39},{reduce,39},{0,0},{reduce,39},{reduce,39},{0,0},{0,0},{0,0},{reduce,39},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,39},{reduce,39},{reduce,39},{shift,58},{0,0},{0,0},{0,0},{reduce,39},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,91},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,92},{0,0},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{shift,93},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,94},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,13},{0,0},{0,0},{reduce,13},{reduce,13},{0,0},{reduce,13},{shift,29},{0,0},{0,0},{0,0},{reduce,13},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,13},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{accept,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,23},{0,0},{0,0},{reduce,23},{accept,0},{0,0},{reduce,23},{accept,0},{0,0},{0,0},{0,0},{reduce,23},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{accept,0},{accept,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,23},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,14},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,14},{0,0},{0,0},{reduce,14},{reduce,14},{0,0},{reduce,14},{reduce,14},{0,0},{0,0},{0,0},{reduce,14},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,14},{reduce,14},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,14},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,12},{0,0},{0,0},{reduce,12},{reduce,12},{0,0},{reduce,12},{shift,29},{0,0},{0,0},{0,0},{reduce,12},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,12},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,18},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,18},{0,0},{0,0},{reduce,18},{reduce,18},{0,0},{reduce,18},{reduce,18},{0,0},{0,0},{0,0},{reduce,18},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,18},{reduce,18},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,18},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,96},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,39},{agoto,95},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{reduce,9},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,9},{0,0},{0,0},{reduce,9},{reduce,9},{0,0},{reduce,9},{reduce,9},{0,0},{0,0},{0,0},{reduce,9},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,9},{reduce,9},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,9},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,11},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,11},{0,0},{0,0},{reduce,11},{reduce,11},{0,0},{reduce,11},{reduce,11},{0,0},{0,0},{0,0},{reduce,11},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,11},{reduce,11},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,11},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,21},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,97},{0,0},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,98},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,20},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,20},{0,0},{0,0},{reduce,20},{shift,68},{0,0},{reduce,20},{reduce,20},{0,0},{0,0},{0,0},{reduce,20},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,20},{reduce,20},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,20},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{0,0},{shift,2},{shift,3},{shift,4},{shift,5},{shift,6},{shift,7},{shift,8},{shift,27},{shift,10},{0,0},{0,0},{shift,9},{0,0},{0,0},{0,0},{shift,47},{0,0},{0,0},{shift,11},{shift,12},{shift,13},{0,0},{shift,14},{shift,15},{shift,16},{shift,17},{shift,18},{shift,19},{shift,20},{0,0},{0,0},{0,0},{0,0},{shift,22},{0,0},{0,0},{0,0},{0,0},{agoto,99},{agoto,70},{agoto,23},{agoto,24},{agoto,25},{agoto,26},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,100},{0,0},{0,0},{0,0},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,10},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,10},{0,0},{0,0},{reduce,10},{reduce,10},{0,0},{reduce,10},{reduce,10},{0,0},{0,0},{0,0},{reduce,10},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,10},{reduce,10},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,10},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{shift,28},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,71},{0,0},{shift,101},{shift,29},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{shift,30},{shift,31},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{reduce,24},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,24},{0,0},{0,0},{reduce,24},{reduce,24},{0,0},{reduce,24},{reduce,24},{0,0},{0,0},{0,0},{reduce,24},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,24},{reduce,24},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,24},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
{{accept,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,21},{0,0},{0,0},{reduce,21},{accept,0},{0,0},{reduce,21},{accept,0},{0,0},{0,0},{0,0},{reduce,21},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{accept,0},{accept,0},{0,0},{0,0},{0,0},{0,0},{0,0},{reduce,21},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},},
};












static void push(int v)
{
	sstack[++spos] = v;
}
static void pop(int count)
{
	spos -= count;
}
static int top(void)
{
	return sstack[spos];
}
static int print_tstack(struct token tkn)
{
	for (int i = 0; i < tpos+1; i++)
		printf("%s ", tstack[i]->value->value.cstr);
	printf("		%s\n", tkn.value.cstr);
	return spos+1;
}
static int print_stack(struct token tkn)
{
	for (int i = 0; i < spos+1; i++)
		printf("%d ", sstack[i]);
	printf("		%d\n", tkn.symbol);
	return spos+1;
}

static int shift(int v)
{
	//if(debug)ddPrintf("SHIFT %d\n", v);
	push(v);
	tstack[++tpos] = make_tokenNode(stream++);
	return 0;
}
static int reduce(int v)
{
	//if(debug)ddPrintf("REDUCE %d\n", v);
	pop(grammar[v].length);

	struct tokenNode** children = qmake(struct tokenNode*, grammar[v].length);
	for (int i = 0; i < grammar[v].length; i++) children[i] = tstack[tpos-i];
	tpos -= grammar[v].length;
	tstack[++tpos] = make_tokenNode_children(children, grammar[v].length, grammar[v].result);

	struct action cact = stb[top()][grammar[v].result];
	(*(cact.action))(cact.value);
	return 0;
}
static int agoto(int v)
{
	//if(debug)ddPrintf("GOTO %d\n", v);
	push(v);
	return 0;
}
/*
#2:|    +-------|27:  |                                                                                                                                                                     
#3:|    |       +-------|28:  |                                                                                                                                                             
#4:|    |       |       +-------|14: )|                                                                                                                                                     
#4:|    |       |       +-------|28:  |                                                                                                                                                     
#5:|    |       |       |       +-------|27:  |                                                                                                                                             
#6:|    |       |       |       |       +-------|7: d|                                                                                                                                      
#6:|    |       |       |       |       +-------|6: 8|                                                                                                                                      
#6:|    |       |       |       |       +-------|5: @|                                                                                                                                      
#5:|    |       |       |       +-------|12: ,|                                                                                                                                             
#5:|    |       |       |       +-------|28:  |                                                                                                                                             
#6:|    |       |       |       |       +-------|27:  |                                                                                                                                     
#7:|    |       |       |       +       |       +-------|7: c|                                                                                                                              
#7:|    |       |       |       |       |       +-------|6: 8|                                                                                                                              
#7:|    |       |       |       +       |       +-------|5: @|                                                                                                                              
#6:|    |       |       |       |       +-------|12: ,|                                                                                                                                     
#6:|    |       |       |       |       +-------|28:  |                                                                                                                                     
#7:|    |       |       |       |       |       +-------|27:  |                                                                                                                             
#8:|    |       |       |       |       |       |       +-------|7: b|                                                                                                                      
#8:|    |       |       |       |       |       |       +-------|6: 8|                                                                                                                      
#8:|    |       |       |       |       |       |       +-------|5: @|                                                                                                                      
#7:|    |       |       |       |       |       +-------|12: ,|                                                                                                                             
#7:|    |       |       |       |       |       +-------|27:  |                                                                                                                             
#8:|    |       |       |       |       |       |       +-------|7: a|                                                                                                                      
#8:|    |       |       |       |       |       |       +-------|6: 8|                                                                                                                      
#8:|    |       |       |       |       |       |       +-------|5: @|                                                                                                                      
#4:|    |       |       +-------|13: (|                                                                                                                                                     
#3:|    |       +-------|7: call|                                                                                                                                                           
#3:|    |       +-------|6: 8|                                                                                                                                                              
#3:|    |       +-------|5: @|                                                                                                                                                              
#3:|    |       +-------|15: sub|                                                                                                                                                           
*/
static void zip(struct tokenNode* node)
{
	if (node->nodeCount == 7 && node->nodes[2]->value->symbol == G_OBP && node->nodes[6]->value->symbol == G_KW_SUB)
	{
		struct tokenNode* param = node->nodes[1];
		node->nodes[0] = make_tokenNode_nont(G_FP, " ");
		node->nodes[0]->nodes[0] = param;
		node->nodes[0]->nodeCount = 2;
		node->nodes[0]->nodes[1] = make_tokenNode_nont(G_COMMA, ",");
		node->nodes[1] = node->nodes[3];
		node->nodes[2] = node->nodes[4];
		node->nodes[3] = node->nodes[5];
		node->nodes[4] = node->nodes[6];
		node->nodeCount = 5;
	}
	if (node->nodeCount == 4 && node->nodes[3]->value->symbol == G_I && node->nodes[2]->value->symbol == G_OBP)
	{
		struct tokenNode* param = node->nodes[1];
		node->nodes[0] = make_tokenNode_nont(G_FP, " ");
		node->nodes[0]->nodes[0] = param;
		node->nodes[0]->nodes[1] = make_tokenNode_nont(G_COMMA, ",");
		node->nodes[0]->nodeCount = 2;
		node->nodes[1] = node->nodes[3];
		node->nodeCount = 2;
	}
	for (int i = 0; i < node->nodeCount; i++)
	{
		if (node->nodes[i]->nodeCount == 3 && node->nodes[i]->nodes[0]->value->symbol == G_CBP)
		{
			node->nodes[i] = node->nodes[i]->nodes[1];
		}
		if (node->nodes[i]->value->symbol == G_FP)
		{
			while (node->nodes[i]->nodes[node->nodes[i]->nodeCount-2]->value->symbol == G_COMMA)
			{
				node->nodes[i]->nodes[node->nodes[i]->nodeCount] = node->nodes[i]->nodes[node->nodes[i]->nodeCount-2];
				if (node->nodes[i]->nodes[node->nodes[i]->nodeCount-1]->nodeCount == 3 && node->nodes[i]->nodes[node->nodes[i]->nodeCount-1]->nodes[1]->value->symbol == G_COMMA)
				{
					node->nodes[i]->nodes[node->nodes[i]->nodeCount+1] = node->nodes[i]->nodes[node->nodes[i]->nodeCount-1]->nodes[2];
					node->nodes[i]->nodes[node->nodes[i]->nodeCount-1] = node->nodes[i]->nodes[node->nodes[i]->nodeCount-1]->nodes[0];
					node->nodes[i]->nodeCount += 2;
				}
				else
					node->nodes[i]->nodeCount += 1;
			}
		}
		if (node->nodes[i]->nodeCount == 4 && node->nodes[i]->nodes[3]->value->symbol == G_I && node->nodes[i]->nodes[2]->value->symbol == G_OBP)
		{
			struct tokenNode* param = node->nodes[i]->nodes[1];
			node->nodes[i]->nodes[0] = make_tokenNode_nont(G_FP, " ");
			node->nodes[i]->nodes[0]->nodes[0] = param;
			node->nodes[i]->nodes[0]->nodes[1] = make_tokenNode_nont(G_COMMA, ",");
			node->nodes[i]->nodes[0]->nodeCount = 2;
			node->nodes[i]->nodes[1] = node->nodes[i]->nodes[3];
			node->nodes[i]->nodeCount = 2;
		}
		while (node->nodes[i]->nodeCount == 1)
		{
			node->nodes[i] = node->nodes[i]->nodes[0];
		}
		zip(node->nodes[i]);
	}
}
static int accept(int v)
{
	if(debug)ddPrintf("ACCEPT\n");
	zip(tstack[0]);
	if(debug)print_tree(tstack[0], 2);
	trees[treeCount++] = tstack[0];
	tpos = -1;
	spos = -1;
	push(0);
	return 1;
}

void print_tree(struct tokenNode* root, int depth)
{
	printf("#%d:", depth);
	for (int i = 0; i < depth-1; i++) printf("|	");
	printf("+-------");
	printf("|%d: %s|\n", root->value->symbol, root->value->value.cstr);
	for (int i = 0; i < root->nodeCount; i++)
		print_tree(root->nodes[i], depth+1);
}


struct tokenNode** parser_main(struct token* tokens, sizet tokenCount, sizet* _treeCount)
{
	treeCount = 0;
	trees = qmake(struct tokenNode*, 10000000);
	stream = tokens;
	streamEnd = tokens+tokenCount;
	push(0);
	printf("start\n");
	int i = 1;
	while (1)
	{
		//if (debug)printf("run %d\n", i);
		//if (debug)print_stack(*stream);
		//if (debug)print_tstack(*stream);
		struct action cact = stb[top()][(*stream).symbol];
		if (cact.action == 0) { compile_error(make_format_ddString("SYNTAX ERROR AT STATE %d\n", i).cstr); exit(0); };
		if (((*(cact.action))(cact.value)) == 1)
		{
			if (stream+1 == streamEnd) goto parser_exit;
			else stream++;
		}
		i++;
	}

parser_exit:
	*_treeCount = treeCount;
	return trees;
}

#endif
