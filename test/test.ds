@8 value = 69;
sub @8 caller(@8 var);
{
	.mov	byte[rbp-5], 'h';
	.mov	byte[rbp-4], 'e';
	.mov	byte[rbp-3], 'l';
	.mov	byte[rbp-2], 'l';
	.mov	byte[rbp-1], 'o';
	.mov	byte[rbp-0], 0;
	.mov	rax, 1;
	.mov	rdi, 1;
	.sub	rbp, 5;
	.mov	rsi, rbp;
	.add	rbp, 5;
	.mov	rdx, 5;
	.syscall;
};
@8 value2 = 2*5;
sub @8 caller2(@8 var);
{
	.mov	byte[rbp-6], 'y';
	.mov	byte[rbp-5], 'o';
	.mov	byte[rbp-4], ' ';
	.mov	byte[rbp-3], 'b';
	.mov	byte[rbp-2], 'r';
	.mov	byte[rbp-1], 'o';
	.mov	byte[rbp-0], 0;
	.mov	rax, 1;
	.mov	rdi, 1;
	.sub	rbp, 6;
	.mov	rsi, rbp;
	.add 	bp, 6;
	.mov	rdx, 6;
	.syscall;
};
.call caller;
.call caller2;
