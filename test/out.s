section .data;
argv:
	DQ	0;
argc:
	DD	0;
_69_str0:
	DW	`\x1b[38;2;255;255;0mYO\n`,0;
_69_str1:
	DW	`\n`,0;
_69_str2:
	DW	`\n`,0;
section .text;
pnum:
	PUSH	RBP;
	MOV	RBP, RSP;
	SUB	RSP, 0;
	PUSH	QWORD[RBP--16];
	PUSH	48;
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	PUSH	R9;
	POP	QWORD[RBP--16];
	mov	rax, 1;
	mov	rdi, 1;
	add	rbp, 16;
	mov	rsi, rbp;
	sub	rbp, 16;
	mov	rdx, 1;
	syscall;
.SC03:
	ADD	RSP, 0;
	POP	RBP;
	RET;
pstr:
	PUSH	RBP;
	MOV	RBP, RSP;
	SUB	RSP, 8;
	PUSH	QWORD[RBP--16];
	CALL	strlen;
	ADD	RSP, 8;
	PUSH	R8;
	POP	QWORD[RBP-8];
	mov	rax, 1;
	mov	rdi, 1;
	mov	rsi, [rbp+16];
	mov	rdx, [rbp-8];
	syscall;
.SC02:
	ADD	RSP, 8;
	POP	RBP;
	RET;
strlen:
	PUSH	RBP;
	MOV	RBP, RSP;
	SUB	RSP, 8;
	PUSH	0;
	POP	QWORD[RBP-8];
.WL14:
	PUSH	QWORD[RBP-8];
	POP	R8;
	INC	R8;
	PUSH	R8;
	POP	QWORD[RBP-8];
.SC14:
	PUSH	QWORD[RBP-8];
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--16];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	MOVSX	RAX, BYTE[R8];
	PUSH	RAX;
	PUSH	0;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETNE	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 1;
	JE	.WL14;
	PUSH	QWORD[RBP-8];
	POP	R8;
	JMP	.SC01;
.SC01:
	ADD	RSP, 8;
	POP	RBP;
	RET;
nts:
	PUSH	RBP;
	MOV	RBP, RSP;
	SUB	RSP, 32;
	PUSH	QWORD[RBP--32];
	PUSH	0;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETE	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 0;
	JE	.SC10;
	PUSH	'0';
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	RAX;
	MOV	BYTE[R8], AL;
	PUSH	0;
	PUSH	1;
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	POP	RAX;
	MOV	BYTE[R8], AL;
	PUSH	0;
	POP	R8;
	JMP	.SC00;
.SC10:
	PUSH	'+';
	POP	QWORD[RBP-8];
	PUSH	QWORD[RBP--32];
	PUSH	0;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETL	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 0;
	JE	.SC11;
	PUSH	'-';
	POP	QWORD[RBP-8];
	PUSH	QWORD[RBP--32];
	PUSH	QWORD[RBP--32];
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	PUSH	QWORD[RBP--32];
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	POP	QWORD[RBP--32];
.SC11:
	PUSH	0;
	POP	QWORD[RBP-16];
.WL12:
	PUSH	'0';
	PUSH	QWORD[RBP-16];
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	POP	RAX;
	MOV	BYTE[R8], AL;
	PUSH	QWORD[RBP-16];
	POP	R8;
	INC	R8;
	PUSH	R8;
	POP	QWORD[RBP-16];
.SC12:
	PUSH	QWORD[RBP-16];
	PUSH	QWORD[RBP--16];
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETL	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 1;
	JE	.WL12;
	PUSH	0;
	PUSH	1;
	PUSH	QWORD[RBP--16];
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	POP	RAX;
	MOV	BYTE[R8], AL;
	PUSH	2;
	PUSH	QWORD[RBP--16];
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	POP	QWORD[RBP-24];
	PUSH	0;
	POP	QWORD[RBP-32];
.WL13:
	PUSH	QWORD[RBP--32];
	PUSH	10;
	XOR	RAX, RAX;
	XOR	RDX, RDX;
	POP	R8;
	POP	RAX;
	DIV	R8;
	MOV	R8, RDX;
	XOR	RAX, RAX;
	XOR	RDX, RDX;
	PUSH	R8;
	POP	QWORD[RBP-32];
	PUSH	QWORD[RBP--32];
	PUSH	10;
	XOR	RAX, RAX;
	XOR	RDX, RDX;
	POP	R8;
	POP	RAX;
	DIV	R8;
	PUSH	RAX;
	XOR	RAX, RAX;
	XOR	RDX, RDX;
	POP	QWORD[RBP--32];
	PUSH	QWORD[RBP-32];
	PUSH	'0';
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	PUSH	R8;
	PUSH	QWORD[RBP-24];
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	POP	RAX;
	MOV	BYTE[R8], AL;
	PUSH	1;
	PUSH	QWORD[RBP-24];
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	POP	QWORD[RBP-24];
.SC13:
	PUSH	QWORD[RBP--32];
	PUSH	0;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETNE	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 1;
	JE	.WL13;
	PUSH	QWORD[RBP-8];
	PUSH	QWORD[RBP-24];
	POP	R8;
	MOV	RAX, 1;
	MUL	R8;
	PUSH	RAX;
	PUSH	QWORD[RBP--24];
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	POP	RAX;
	MOV	BYTE[R8], AL;
.SC00:
	ADD	RSP, 32;
	POP	RBP;
	RET;
global main
main:
	EXTERN	malloc;
	EXTERN	free;
	PUSH	RBP;
	MOV	RBP, RSP;
	SUB	RSP, 91;
	MOV	QWORD[argv], RSI;
	MOV	DWORD[argc], EDI;
	PUSH	0;
	POP	QWORD[RBP-8];
.WL04:
	PUSH	_69_str0;
	CALL	pstr;
	ADD	RSP, 0;
.SC04:
	PUSH	QWORD[RBP-8];
	POP	R8;
	INC	R8;
	PUSH	R8;
	POP	QWORD[RBP-8];
	PUSH	QWORD[RBP-8];
	PUSH	10;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETL	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 1;
	JE	.WL04;
	MOV	R8, RBP;
	SUB	R8, 26;
	PUSH	R8;
	POP	QWORD[RBP-16];
	PUSH	54;
	MOV	R8, RBP;
	SUB	R8, 49;
	PUSH	R8;
	POP	R8;
	POP	QWORD[R8];
	MOV	R8, RBP;
	SUB	R8, 67;
	PUSH	R8;
	POP	QWORD[RBP-57];
	PUSH	365;
	POP	QWORD[RBP-75];
	PUSH	369;
	POP	QWORD[RBP-83];
	PUSH	1;
	PUSH	1;
	POP	R8;
	POP	R9;
	CMP	R9, R8;
	SETE	AL;
	MOVZX	R8, AL;
	PUSH	R8;
	POP	R8;
	CMP	R8, 0;
	JE	.SC05;
	PUSH	_69_str1;
	CALL	pstr;
	ADD	RSP, 0;
	PUSH	QWORD[RBP-83];
	PUSH	QWORD[RBP-57];
	PUSH	10;
	CALL	nts;
	ADD	RSP, 24;
	PUSH	QWORD[RBP-57];
	CALL	pstr;
	ADD	RSP, 8;
	PUSH	_69_str2;
	CALL	pstr;
	ADD	RSP, 0;
.SC05:
	PUSH	2;
	PUSH	3;
	POP	R8;
	POP	R9;
	SUB	R8, R9;
	PUSH	R8;
	PUSH	1;
	POP	R8;
	POP	R9;
	ADD	R8, R9;
	PUSH	R8;
	POP	QWORD[RBP-91];
	MOV	EAX, 0;
	POP	RBP;
	MOV	RAX, 60;
	MOV	RDI, 0;
	SYSCALL;
